{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "keyvaultname": {
            "defaultValue": "{{.keyvaultname}}",
            "type": "String"
        },
        "keyvaultvnet": {
            "defaultValue": "{{.vnetname}}",
            "type": "String"
        },
        "subnetname": {
            "defaultValue": "{{.subnetname}}",
            "type": "String"
        },
        "location": {
            "defaultValue": "{{.location}}",
            "type": "String"
        },
        "tenantId": {
            "defaultValue": "{{.tenantId}}",
            "type": "String"
        },
        "spname": {
            "defaultValue": "{{.spname}}",
            "type": "String"
        },
        "privateEndpointName": {
            "defaultValue": "{{.privateEndpointName}}",
            "type": "String"
        },
        "privateDnsZoneName": {
            "defaultValue": "{{.privateDnsZoneName}}",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2022-11-01",
            "name": "[parameters('keyvaultname')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[parameters('tenantId')]",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "virtualNetworkRules": [
                        {
                            "id": "[concat(parameters('keyvaultvnet'), '/subnets/', parameters('subnetname'))]",
                            "ignoreMissingVnetServiceEndpoint": true
                        }
                    ]
                },
                "accessPolicies": [
                    {
                        "tenantId": "[parameters('tenantId')]",
                        "objectId": "[parameters('spname')]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "GetRotationPolicy",
                                "SetRotationPolicy",
                                "Rotate"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": true,
                "vaultUri": "[concat('https://', parameters('keyvaultname'), '.vault.azure.net/')]",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2021-05-01",
            "name": "[parameters('privateEndpointName')]",
            "location": "[parameters('location')]",
            "properties": {
                "subnet": {
                    "id": "[concat(parameters('keyvaultvnet'), '/subnets/', parameters('subnetname'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('keyvaultname'), '-plsc')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultname'))]",
                            "groupIds": [ "vault" ],
                            "requestMessage": "Please approve the connection."
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2021-05-01",
            "name": "[concat(parameters('privateDnsZoneName'), '/', parameters('keyvaultvnet'))]",
            "location": "global",
            "properties": {
                "virtualNetwork": {
                    "id": "[parameters('keyvaultvnet')]"
                },
                "registrationEnabled": false
            }
        }
    ]
}
