apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-postgres
  labels:
    {{- include "helper.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "helper.selectorLabelsDb" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "helper.selectorLabelsDb" . | nindent 8 }}
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: keycloak
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-db-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-db-secret
                  key: password
          image: postgres:11.3
          name: postgres
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.targetPortDb }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: {{ .Chart.Name }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.targetPortDb }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.targetPortDb }}
            initialDelaySeconds: 120
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      restartPolicy: Always
      volumes:
        - name: {{ .Chart.Name }}
          persistentVolumeClaim:
            claimName: {{ .Chart.Name }}